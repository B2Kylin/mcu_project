C51 COMPILER V9.56.0.0   USBCORE                                                           09/17/2017 22:48:44 PAGE 1   


C51 COMPILER V9.56.0.0, COMPILATION OF MODULE USBCORE
OBJECT MODULE PLACED IN .\Objects\UsbCore.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE src\UsbCore.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\Listin
                    -gs\UsbCore.lst) TABS(2) OBJECT(.\Objects\UsbCore.obj)

line level    source

   1          #include "include/config.h"
   2          #include "include/pdiusbd12.h"
   3          #include "include/uart.h"
   4          #include "include/usbcore.h"
   5          
   6          /********************************************************************
   7          函数功能：延时x毫秒函数。
   8          入口参数：x：延时的毫秒数。
   9          返    回：无。
  10          备    注：无。
  11          ********************************************************************/
  12          void DelayXms(uint16 x)                
  13          {
  14   1        uint16 i;
  15   1        uint16 j;
  16   1        for(i=0;i<x;i++)
  17   1          for(j=0;j<227;j++); //循环语句延时
  18   1      }
  19          ////////////////////////End of function//////////////////////////////
  20          
  21          /********************************************************************
  22          函数功能：USB断开连接函数。
  23          入口参数：无。
  24          返    回：无。
  25          备    注：无。
  26          
  27          Set Mode命令：0xF3
  28          数据：写2个字节 配置字节和时钟分频系数字节
  29          配置字节：
  30            bit 0：保留 置0
  31            bit 1：  无懒时钟(低频时钟)模式
  32                    [1] 表示 CLKOUT 不会切换到 LazyClock 
  33                    0 表示 CLKOUT 在 Suspend 脚变高之后切换到 LazyClock 
  34                      LazyClock 频率是 30KHz ± 40% 编程值将不过会被总线复位所改变
  35            bit 2：  时钟运行
  36                    [1] 表示内部时钟和 PLL 即使在挂起状态下仍然运行 
  37                    0 表示只要不需要时 内部时钟晶振和 PLL 就停止运行 
  38                      为了满足严格的挂起电流要求 该位需要设置为 0 已编程的值不会被总线复位
             -所改变
  39            bit 3：  中断模式
  40                    1 表示报告所有的错误和 NAKing 并产生一个中断 
  41                    [0] 表示只有 OK 被报告 编程值不会被总线复位所改变
  42            bit 4：  软连接控制
  43                    1 表示如果 VBUS 可用上行数据上拉电阻就被连接 
  44                    [0] 表示不连接 已编程的值不会被总线复位所改变
  45            bit 5：  RESERVED; WRITE 0
  46            bit 7~6：  端点配置选择
  47                    模式 [0] 非同步模式  
  48                    模式 1 同步输出模式  
  49                    模式 2 同步输入模式  
  50                    模式 3 同步输入 / 输出模式
  51            为方便调试，不考虑省电，时钟都使能，中断模式选择正确传输才产生中断
  52            端点模式选择为模式0，即端点1，2都为普通端点，因为这里不需要等时传输
  53            0x06
C51 COMPILER V9.56.0.0   USBCORE                                                           09/17/2017 22:48:44 PAGE 2   

  54          时钟分频系数字节:
  55            bit 3~0:  时钟分频系数
  56                      该值用来表示 CLKOUT 的时钟分频系数 用 N 表示分频系数 那么输出频率就为
  57                      48MHz/(N+1) 复位值为 11 这产生 4MHz 的输出频率 然后可由用户自行调节
  58                      当N 为 0 时 得到最大频率 48MHz 当 N 取最大 11 时 得到最小频率 4MHz 
  59                      PDIUSBD12的设计确保了在改变频率时不会出现干扰 已编程的值不会被总线复位
             -所改变
  60            bit 5~4   RESERVED; WRITE 0
  61            bit 6:    SET_TO_ONE  
  62                      该位需要在任何 DMA 读或写操作之前置为 1 
  63                      该位在上电复位值为 0 复位后可将其一直设为 1  
  64            bit 7:    仅有 SOF 中断模式
  65                      将该位置 1 后 仅当帧时钟的起始 SOF 时刻引起中断的产生
  66                      而不管引脚中断模式的设置状态 设置 DMA 位 5
  67            设置为8分频 clkout端口输出6MHZ 0111
  68            中断在任何时刻产生            0100
  69            0x47
  70          ********************************************************************/
  71          void UsbDisconnect(void)
  72          {
  73   1      #ifdef DEBUG0
  74   1        Prints("断开USB连接。\r\n");
  75   1      #endif
  76   1        D12WriteCommand(D12_SET_MODE);  //写设置模式命令
  77   1        D12WriteByte(0x06); //设置模式的第一字节 D- 上拉电阻断开
  78   1        D12WriteByte(0x47); //设置模式的第二字节
  79   1        DelayXms(1000);  //延迟1秒
  80   1      }
  81          ////////////////////////End of function//////////////////////////////
  82          
  83          /********************************************************************
  84          函数功能：USB连接函数。
  85          入口参数：无。
  86          返    回：无。
  87          备    注：无。
  88          ********************************************************************/
  89          void UsbConnect(void)
  90          {
  91   1      #ifdef DEBUG0
  92   1        Prints("连接USB。\r\n");
  93   1      #endif
  94   1        D12WriteCommand(D12_SET_MODE);  //写设置模式命令
  95   1        D12WriteByte(0x16); //设置模式的第一字节 D- 上拉电阻接上
  96   1        D12WriteByte(0x47); //设置模式的第二字节
  97   1      }
  98          
  99          /********************************************************************
 100          函数功能：总线挂起中断处理函数。
 101          入口参数：无。
 102          返    回：无。
 103          备    注：无。
 104          ********************************************************************/
 105          void UsbBusSuspend(void)
 106          {
 107   1      #ifdef DEBUG0
 108   1       Prints("USB总线挂起。\r\n");
 109   1      #endif
 110   1      }
 111          ////////////////////////End of function//////////////////////////////
 112          
 113          /********************************************************************
 114          函数功能：总线复位中断处理函数。
C51 COMPILER V9.56.0.0   USBCORE                                                           09/17/2017 22:48:44 PAGE 3   

 115          入口参数：无。
 116          返    回：无。
 117          备    注：无。
 118          ********************************************************************/
 119          void UsbBusReset(void)
 120          {
 121   1      #ifdef DEBUG0
 122   1       Prints("USB总线复位。\r\n");
 123   1      #endif
 124   1       Ep1InIsBusy=0; //复位后端点1输入缓冲区空闲。
 125   1      }
 126          ////////////////////////End of function//////////////////////////////
 127          
 128          /********************************************************************
 129          函数功能：端点0输出中断处理函数。
 130          入口参数：无。
 131          返    回：无。
 132          备    注：无。
 133          ********************************************************************/
 134          void UsbEp0Out(void)
 135          {
 136   1      #ifdef DEBUG0
 137   1       Prints("USB端点0输出中断。\r\n");
 138   1      #endif
 139   1      }
 140          ////////////////////////End of function//////////////////////////////
 141          
 142          /********************************************************************
 143          函数功能：端点0输入中断处理函数。
 144          入口参数：无。
 145          返    回：无。
 146          备    注：无。
 147          ********************************************************************/
 148          void UsbEp0In(void)
 149          {
 150   1      #ifdef DEBUG0
 151   1       Prints("USB端点0输入中断。\r\n");
 152   1      #endif
 153   1      }
 154          ////////////////////////End of function//////////////////////////////
 155          
 156          /********************************************************************
 157          函数功能：端点1输出中断处理函数。
 158          入口参数：无。
 159          返    回：无。
 160          备    注：无。
 161          ********************************************************************/
 162          void UsbEp1Out(void)
 163          {
 164   1      #ifdef DEBUG0
 165   1       Prints("USB端点1输出中断。\r\n");
 166   1      #endif
 167   1      }
 168          ////////////////////////End of function//////////////////////////////
 169          
 170          /********************************************************************
 171          函数功能：端点1输入中断处理函数。
 172          入口参数：无。
 173          返    回：无。
 174          备    注：无。
 175          ********************************************************************/
 176          void UsbEp1In(void)
C51 COMPILER V9.56.0.0   USBCORE                                                           09/17/2017 22:48:44 PAGE 4   

 177          {
 178   1      #ifdef DEBUG0
 179   1       Prints("USB端点1输入中断。\r\n");
 180   1      #endif
 181   1      }
 182          ////////////////////////End of function//////////////////////////////
 183          
 184          /********************************************************************
 185          函数功能：端点2输出中断处理函数。
 186          入口参数：无。
 187          返    回：无。
 188          备    注：无。
 189          ********************************************************************/
 190          void UsbEp2Out(void)
 191          {
 192   1      #ifdef DEBUG0
 193   1       Prints("USB端点2输出中断。\r\n");
 194   1      #endif
 195   1      }
 196          ////////////////////////End of function//////////////////////////////
 197          
 198          /********************************************************************
 199          函数功能：端点2输入中断处理函数。
 200          入口参数：无。
 201          返    回：无。
 202          备    注：无。
 203          ********************************************************************/
 204          void UsbEp2In(void)
 205          {
 206   1      #ifdef DEBUG0
 207   1       Prints("USB端点2输入中断。\r\n");
 208   1      #endif
 209   1      }
 210          ////////////////////////End of function//////////////////////////////


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    163    ----
   CONSTANT SIZE    =    246    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
